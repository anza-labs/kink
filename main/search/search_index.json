{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"KinK","text":"Component Image Version Mode ETCD <code>ghcr.io/anza-labs/library/kine</code> StatefulSet Kube Scheduler <code>registry.k8s.io/kube-scheduler</code> Deployment Kube API-Server <code>registry.k8s.io/kube-apiserver</code> Deployment Kube Controller Manager <code>registry.k8s.io/kube-controller-manager</code> Deployment Node <code>docker.io/kindest/base</code> StatefulSet"},{"location":"#license","title":"License","text":"<p><code>kink</code> is licensed under the Apache-2.0.</p>"},{"location":"getting_started/0-introduction/","title":"Introduction","text":""},{"location":"getting_started/0-introduction/#installing-the-operator","title":"Installing the Operator","text":"<p>To install the <code>kink</code>, run the following commands. This will ensure you're always pulling the latest stable release from the operator\u2019s GitHub repository.</p> <p>Note</p> <p>This software requires Cert Manager to manage SSL/TLS certificates. Cert Manager automates the creation, renewal, and management of certificates within Kubernetes clusters.</p> <p>For installation instructions, please visit the official documentation: Cert Manager Installation.</p> <p>Let me know if you'd like to modify or expand on any details! <pre><code>LATEST=\"$(curl -s 'https://api.github.com/repos/anza-labs/kink/releases/latest' | jq -r '.tag_name')\"\nkubectl apply -k \"https://github.com/anza-labs/kink/?ref=${LATEST}\"\n</code></pre></p> <p>This command:</p> <ol> <li>Fetches the latest release tag using the GitHub API.</li> <li>Applies the corresponding version of the <code>kink</code> to your Kubernetes cluster using <code>kubectl</code>.</li> </ol> <p>Once installed, the operator will begin monitoring the appropriate resources in your cluster based on the CRDs defined.</p>"},{"location":"reference/out/","title":"API Reference","text":""},{"location":"reference/out/#packages","title":"Packages","text":"<ul> <li>controlplane.cluster.x-k8s.io/v1alpha1</li> <li>infrastructure.cluster.x-k8s.io/v1alpha1</li> </ul>"},{"location":"reference/out/#controlplaneclusterx-k8siov1alpha1","title":"controlplane.cluster.x-k8s.io/v1alpha1","text":"<p>Package v1alpha1 contains API Schema definitions for the controlplane v1alpha1 API group.</p>"},{"location":"reference/out/#resource-types","title":"Resource Types","text":"<ul> <li>KinkControlPlane</li> <li>KinkControlPlaneList</li> <li>KinkControlPlaneTemplate</li> <li>KinkControlPlaneTemplateList</li> </ul>"},{"location":"reference/out/#apiserver","title":"APIServer","text":"<p>APIServer represents a Kubernetes API server.</p> <p>Image:   - If specified image contains tag or sha, those are ignored.   - Defaults to registry.k8s.io/kube-apiserver</p> <p>Appears in: - KinkControlPlaneSpec</p> Field Description Default Validation <code>image</code> string Image specifies the container image to use. <code>imagePullPolicy</code> PullPolicy Image pull policy. One of Always, Never, IfNotPresent. <code>resources</code> ResourceRequirements Resources describes the compute resource requirements for the container. <code>replicas</code> integer Number of desired pods. Defaults to 1. 1 Maximum: 5 Minimum: 1  <code>verbosity</code> integer Verbosity specifies the log verbosity level for the container. Valid values range from 0 (silent) to 10 (most verbose). 4 Maximum: 10 Minimum: 0  <code>extraArgs</code> object (keys:string, values:string) ExtraArgs defines additional arguments to be passed to the container executable."},{"location":"reference/out/#controllermanager","title":"ControllerManager","text":"<p>ControllerManager represents a Kubernetes controller manager.</p> <p>Image:   - If specified image contains tag or sha, those are ignored.   - Defaults to registry.k8s.io/kube-controller-manager</p> <p>Appears in: - KinkControlPlaneSpec</p> Field Description Default Validation <code>image</code> string Image specifies the container image to use. <code>imagePullPolicy</code> PullPolicy Image pull policy. One of Always, Never, IfNotPresent. <code>resources</code> ResourceRequirements Resources describes the compute resource requirements for the container. <code>replicas</code> integer Number of desired pods. Defaults to 1. 1 Maximum: 5 Minimum: 1  <code>verbosity</code> integer Verbosity specifies the log verbosity level for the container. Valid values range from 0 (silent) to 10 (most verbose). 4 Maximum: 10 Minimum: 0  <code>extraArgs</code> object (keys:string, values:string) ExtraArgs defines additional arguments to be passed to the container executable."},{"location":"reference/out/#kine","title":"Kine","text":"<p>Kine represents ETCD-shim container.</p> <p>Appears in: - KinkControlPlaneSpec</p> Field Description Default Validation <code>image</code> string Image specifies the container image to use. <code>imagePullPolicy</code> PullPolicy Image pull policy. One of Always, Never, IfNotPresent. <code>resources</code> ResourceRequirements Resources describes the compute resource requirements for the container. <code>persistence</code> Persistence Persistence specifies volume configuration for Kine data persistence.Defaults to EmptyDir."},{"location":"reference/out/#kinkcontrolplane","title":"KinkControlPlane","text":"<p>KinkControlPlane is the Schema for the kinkcontrolplanes API.</p> <p>Appears in: - KinkControlPlaneList</p> Field Description Default Validation <code>apiVersion</code> string <code>controlplane.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkControlPlane</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ObjectMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>spec</code> KinkControlPlaneSpec <code>status</code> KinkControlPlaneStatus"},{"location":"reference/out/#kinkcontrolplanelist","title":"KinkControlPlaneList","text":"<p>KinkControlPlaneList contains a list of KinkControlPlane.</p> Field Description Default Validation <code>apiVersion</code> string <code>controlplane.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkControlPlaneList</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ListMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>items</code> KinkControlPlane array"},{"location":"reference/out/#kinkcontrolplanespec","title":"KinkControlPlaneSpec","text":"<p>KinkControlPlaneSpec defines the desired state of KinkControlPlane.</p> <p>Appears in: - KinkControlPlane - KinkControlPlaneTemplateResource</p> Field Description Default Validation <code>version</code> string Version defines the desired Kubernetes version for the control plane.The value must be a valid semantic version; also if the value provided by the userdoes not start with the v prefix, it must be added. <code>affinity</code> Affinity Affinity specifies the scheduling constraints for Pods. <code>apiServer</code> APIServer APIServer defines the configuration for the Kubernetes API server. <code>kine</code> Kine Kine defines the configuration for the Kine component. <code>scheduler</code> Scheduler Scheduler defines the configuration for the Kubernetes scheduler. <code>controllerManager</code> ControllerManager ControllerManager defines the configuration for the Kubernetes controller manager."},{"location":"reference/out/#kinkcontrolplanestatus","title":"KinkControlPlaneStatus","text":"<p>KinkControlPlaneStatus defines the observed state of KinkControlPlane.</p> <p>Appears in: - KinkControlPlane</p> Field Description Default Validation <code>version</code> string Version represents the minimum Kubernetes version for the control plane machinesin the cluster. <code>initialized</code> boolean Initialized denotes that the kink control plane API Server is initialized and thusit can accept requests. <code>ready</code> boolean Ready denotes that the kink control plane is ready to serve requests."},{"location":"reference/out/#kinkcontrolplanetemplate","title":"KinkControlPlaneTemplate","text":"<p>KinkControlPlaneTemplate is the Schema for the kinkcontrolplanetemplates API.</p> <p>Appears in: - KinkControlPlaneTemplateList</p> Field Description Default Validation <code>apiVersion</code> string <code>controlplane.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkControlPlaneTemplate</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ObjectMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>spec</code> KinkControlPlaneTemplateSpec <code>status</code> KinkControlPlaneTemplateStatus"},{"location":"reference/out/#kinkcontrolplanetemplatelist","title":"KinkControlPlaneTemplateList","text":"<p>KinkControlPlaneTemplateList contains a list of KinkControlPlaneTemplate.</p> Field Description Default Validation <code>apiVersion</code> string <code>controlplane.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkControlPlaneTemplateList</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ListMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>items</code> KinkControlPlaneTemplate array"},{"location":"reference/out/#kinkcontrolplanetemplateresource","title":"KinkControlPlaneTemplateResource","text":"<p>Appears in: - KinkControlPlaneTemplateSpec</p> Field Description Default Validation <code>metadata</code> ObjectMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>spec</code> KinkControlPlaneSpec"},{"location":"reference/out/#kinkcontrolplanetemplatespec","title":"KinkControlPlaneTemplateSpec","text":"<p>KinkControlPlaneTemplateSpec defines the desired state of KinkControlPlaneTemplate.</p> <p>Appears in: - KinkControlPlaneTemplate</p> Field Description Default Validation <code>template</code> KinkControlPlaneTemplateResource"},{"location":"reference/out/#kinkcontrolplanetemplatestatus","title":"KinkControlPlaneTemplateStatus","text":"<p>KinkControlPlaneTemplateStatus defines the observed state of KinkControlPlaneTemplate.</p> <p>Appears in: - KinkControlPlaneTemplate</p>"},{"location":"reference/out/#kubecomponent","title":"KubeComponent","text":"<p>KubeComponent defines the base configuration for Kink control plane components.</p> <p>Appears in: - APIServer - ControllerManager - Scheduler</p> Field Description Default Validation <code>image</code> string Image specifies the container image to use. <code>imagePullPolicy</code> PullPolicy Image pull policy. One of Always, Never, IfNotPresent. <code>resources</code> ResourceRequirements Resources describes the compute resource requirements for the container. <code>replicas</code> integer Number of desired pods. Defaults to 1. 1 Maximum: 5 Minimum: 1  <code>verbosity</code> integer Verbosity specifies the log verbosity level for the container. Valid values range from 0 (silent) to 10 (most verbose). 4 Maximum: 10 Minimum: 0  <code>extraArgs</code> object (keys:string, values:string) ExtraArgs defines additional arguments to be passed to the container executable."},{"location":"reference/out/#scheduler","title":"Scheduler","text":"<p>Scheduler represents a Kubernetes scheduler.</p> <p>Image:   - If specified image contains tag or sha, those are ignored.   - Defaults to registry.k8s.io/kube-scheduler</p> <p>Appears in: - KinkControlPlaneSpec</p> Field Description Default Validation <code>image</code> string Image specifies the container image to use. <code>imagePullPolicy</code> PullPolicy Image pull policy. One of Always, Never, IfNotPresent. <code>resources</code> ResourceRequirements Resources describes the compute resource requirements for the container. <code>replicas</code> integer Number of desired pods. Defaults to 1. 1 Maximum: 5 Minimum: 1  <code>verbosity</code> integer Verbosity specifies the log verbosity level for the container. Valid values range from 0 (silent) to 10 (most verbose). 4 Maximum: 10 Minimum: 0  <code>extraArgs</code> object (keys:string, values:string) ExtraArgs defines additional arguments to be passed to the container executable."},{"location":"reference/out/#infrastructureclusterx-k8siov1alpha1","title":"infrastructure.cluster.x-k8s.io/v1alpha1","text":"<p>Package v1alpha1 contains API Schema definitions for the infrastructure v1alpha1 API group.</p>"},{"location":"reference/out/#resource-types_1","title":"Resource Types","text":"<ul> <li>KinkCluster</li> <li>KinkClusterList</li> <li>KinkClusterTemplate</li> <li>KinkClusterTemplateList</li> <li>KinkMachine</li> <li>KinkMachineList</li> <li>KinkMachineTemplate</li> <li>KinkMachineTemplateList</li> </ul>"},{"location":"reference/out/#kinkcluster","title":"KinkCluster","text":"<p>KinkCluster is the Schema for the kinkclusters API.</p> <p>Appears in: - KinkClusterList</p> Field Description Default Validation <code>apiVersion</code> string <code>infrastructure.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkCluster</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ObjectMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>spec</code> KinkClusterSpec <code>status</code> KinkClusterStatus"},{"location":"reference/out/#kinkclusterlist","title":"KinkClusterList","text":"<p>KinkClusterList contains a list of KinkCluster.</p> Field Description Default Validation <code>apiVersion</code> string <code>infrastructure.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkClusterList</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ListMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>items</code> KinkCluster array"},{"location":"reference/out/#kinkclusterspec","title":"KinkClusterSpec","text":"<p>KinkClusterSpec defines the desired state of KinkCluster.</p> <p>Appears in: - KinkCluster - KinkClusterTemplateResource</p>"},{"location":"reference/out/#kinkclusterstatus","title":"KinkClusterStatus","text":"<p>KinkClusterStatus defines the observed state of KinkCluster.</p> <p>Appears in: - KinkCluster</p> Field Description Default Validation <code>ready</code> boolean Ready denotes that the kink cluster infrastructure is fully provisioned."},{"location":"reference/out/#kinkclustertemplate","title":"KinkClusterTemplate","text":"<p>KinkClusterTemplate is the Schema for the kinkclustertemplates API.</p> <p>Appears in: - KinkClusterTemplateList</p> Field Description Default Validation <code>apiVersion</code> string <code>infrastructure.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkClusterTemplate</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ObjectMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>spec</code> KinkClusterTemplateSpec <code>status</code> KinkClusterTemplateStatus"},{"location":"reference/out/#kinkclustertemplatelist","title":"KinkClusterTemplateList","text":"<p>KinkClusterTemplateList contains a list of KinkClusterTemplate.</p> Field Description Default Validation <code>apiVersion</code> string <code>infrastructure.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkClusterTemplateList</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ListMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>items</code> KinkClusterTemplate array"},{"location":"reference/out/#kinkclustertemplateresource","title":"KinkClusterTemplateResource","text":"<p>Appears in: - KinkClusterTemplateSpec</p> Field Description Default Validation <code>metadata</code> ObjectMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>spec</code> KinkClusterSpec"},{"location":"reference/out/#kinkclustertemplatespec","title":"KinkClusterTemplateSpec","text":"<p>KinkClusterTemplateSpec defines the desired state of KinkClusterTemplate.</p> <p>Appears in: - KinkClusterTemplate</p> Field Description Default Validation <code>template</code> KinkClusterTemplateResource"},{"location":"reference/out/#kinkclustertemplatestatus","title":"KinkClusterTemplateStatus","text":"<p>KinkClusterTemplateStatus defines the observed state of KinkClusterTemplate.</p> <p>Appears in: - KinkClusterTemplate</p>"},{"location":"reference/out/#kinkmachine","title":"KinkMachine","text":"<p>KinkMachine is the Schema for the kinkmachines API.</p> <p>Appears in: - KinkMachineList</p> Field Description Default Validation <code>apiVersion</code> string <code>infrastructure.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkMachine</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ObjectMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>spec</code> KinkMachineSpec <code>status</code> KinkMachineStatus"},{"location":"reference/out/#kinkmachinelist","title":"KinkMachineList","text":"<p>KinkMachineList contains a list of KinkMachine.</p> Field Description Default Validation <code>apiVersion</code> string <code>infrastructure.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkMachineList</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ListMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>items</code> KinkMachine array"},{"location":"reference/out/#kinkmachinespec","title":"KinkMachineSpec","text":"<p>KinkMachineSpec defines the desired state of KinkMachine.</p> <p>Appears in: - KinkMachine - KinkMachineTemplateResource</p> Field Description Default Validation <code>image</code> string Image specifies the container image to use. <code>imagePullPolicy</code> PullPolicy Image pull policy. One of Always, Never, IfNotPresent. <code>resources</code> ResourceRequirements Resources describes the compute resource requirements for the container. <code>providerID</code> string ProviderID must match the provider ID as seen on the node object corresponding to this machine. <code>affinity</code> Affinity Affinity specifies the scheduling constraints for Pods. <code>persistence</code> Persistence Persistence specifies volume configuration for Kine data persistence.Defaults to EmptyDir."},{"location":"reference/out/#kinkmachinestatus","title":"KinkMachineStatus","text":"<p>KinkMachineStatus defines the observed state of KinkMachine.</p> <p>Appears in: - KinkMachine</p> Field Description Default Validation <code>ready</code> boolean Ready denotes that the kink machine infrastructure is fully provisioned."},{"location":"reference/out/#kinkmachinetemplate","title":"KinkMachineTemplate","text":"<p>KinkMachineTemplate is the Schema for the kinkmachinetemplates API.</p> <p>Appears in: - KinkMachineTemplateList</p> Field Description Default Validation <code>apiVersion</code> string <code>infrastructure.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkMachineTemplate</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ObjectMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>spec</code> KinkMachineTemplateSpec <code>status</code> KinkMachineTemplateStatus"},{"location":"reference/out/#kinkmachinetemplatelist","title":"KinkMachineTemplateList","text":"<p>KinkMachineTemplateList contains a list of KinkMachineTemplate.</p> Field Description Default Validation <code>apiVersion</code> string <code>infrastructure.cluster.x-k8s.io/v1alpha1</code> <code>kind</code> string <code>KinkMachineTemplateList</code> <code>kind</code> string Kind is a string value representing the REST resource this object represents.Servers may infer this from the endpoint the client submits requests to.Cannot be updated.In CamelCase.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds <code>apiVersion</code> string APIVersion defines the versioned schema of this representation of an object.Servers should convert recognized schemas to the latest internal value, andmay reject unrecognized values.More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources <code>metadata</code> ListMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>items</code> KinkMachineTemplate array"},{"location":"reference/out/#kinkmachinetemplateresource","title":"KinkMachineTemplateResource","text":"<p>Appears in: - KinkMachineTemplateSpec</p> Field Description Default Validation <code>metadata</code> ObjectMeta Refer to Kubernetes API documentation for fields of <code>metadata</code>. <code>spec</code> KinkMachineSpec"},{"location":"reference/out/#kinkmachinetemplatespec","title":"KinkMachineTemplateSpec","text":"<p>KinkMachineTemplateSpec defines the desired state of KinkMachineTemplate.</p> <p>Appears in: - KinkMachineTemplate</p> Field Description Default Validation <code>template</code> KinkMachineTemplateResource"},{"location":"reference/out/#kinkmachinetemplatestatus","title":"KinkMachineTemplateStatus","text":"<p>KinkMachineTemplateStatus defines the observed state of KinkMachineTemplate.</p> <p>Appears in: - KinkMachineTemplate</p>"}]}